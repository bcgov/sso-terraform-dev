name: "Terraform"

on:
  push:
    branches:
      - main
    paths:
      - "terraform/**"
      - ".github/**"
  pull_request:
    paths:
      - "terraform/**"
      - ".github/**"

env:
  TF_VERSION: 0.15.3

jobs:
  terraform:
    runs-on: ubuntu-18.04
    env:
      API_URL: 'https://gcp9dahm4c.execute-api.ca-central-1.amazonaws.com/test/actions/'
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ./terraform

      - name: Terraform Variables
        run: |
          cat >"versions.tf" <<EOF
          terraform {
            backend "remote" {
              hostname     = "app.terraform.io"
              organization = "bcgov"
              workspaces {
                name = "${{ secrets.TFC_WORKSPACE }}"
              }
            }
          }
          EOF

          cat >"ci.auto.tfvars" <<EOF
          dev_keycloak_url="${{ secrets.KEYCLOAK_DEV_URL }}"
          test_keycloak_url="${{ secrets.KEYCLOAK_TEST_URL }}"
          prod_keycloak_url="${{ secrets.KEYCLOAK_PROD_URL }}"
          dev_client_secret="${{ secrets.KEYCLOAK_DEV_CLIENT_SECRET }}"
          test_client_secret="${{ secrets.KEYCLOAK_TEST_CLIENT_SECRET }}"
          prod_client_secret="${{ secrets.KEYCLOAK_PROD_CLIENT_SECRET }}"
          EOF
        working-directory: ./terraform

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        working-directory: ./terraform
        continue-on-error: true

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style 🖌\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ⚙️\`${{ steps.init.outcome }}\`
            #### Terraform Plan 📖\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`${process.env.PLAN}\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # TODO: only trigger for request prs oncec labels are added
      - name: Update Plan Status
        uses: fjogeleit/http-request-action@master
        if: github.event_name == 'pull_request'
        with:
          url: '${{env.API_URL}}?status=plan'
          method: 'PUT'
          data: '{"prNumber": ${{ github.event.number }}, "planSuccess": "${{steps.plan.outcome != ''failure''}}"}'
          customHeaders: '{"Authorization": "${{secrets.GH_SECRET}}"}'
        continue-on-error: true

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Get PR Number
        id: prNumber
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: |
          number=$(curl -H "Accept: application/vnd.github.groot-preview+json" https://api.github.com/repos/${{github.repository}}/commits/${{github.sha}}/pulls | jq ".[0].number")
          echo "::set-output name=number::$number"

      # TODO: only trigger for request prs oncec labels are added
      - name: Update Apply Status
        uses: fjogeleit/http-request-action@master
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        with:
          url: '${{env.API_URL}}?status=apply'
          method: 'PUT'
          data: '{"prNumber": ${{ steps.prNumber.outputs.number }}, "applySuccess": "${{steps.apply.outcome != ''failure''}}"}'
          customHeaders: '{"Authorization": "${{secrets.GH_SECRET}}"}'
        continue-on-error: true
