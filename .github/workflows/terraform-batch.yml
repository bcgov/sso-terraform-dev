name: Terraform Batch

on: workflow_dispatch

env:
  TF_VERSION: 1.1.4
  TFC_WORKSPACE: xgr00q-dev-keycloak_dev
  KEYCLOAK_DEV_URL: https://sso-keycloak-1-b861c7-test.apps.silver.devops.gov.bc.ca
  KEYCLOAK_TEST_URL: https://sso-keycloak-2-b861c7-test.apps.silver.devops.gov.bc.ca
  KEYCLOAK_PROD_URL: https://sso-keycloak-3-b861c7-test.apps.silver.devops.gov.bc.ca

jobs:
  terraform:
    runs-on: ubuntu-18.04
    timeout-minutes: 30
    env:
      API_URL: ${{ secrets.WEBAPP_API_URL }}
    steps:
      - uses: hmarr/debug-action@v2
      - uses: actions/checkout@v2

      - name: Check if Action Runs Already
        id: action
        run: |
          workflow=$(echo "${{ github.event.workflow }}" | cut -d/ -f3)
          runs=$(curl -H "Accept: application/vnd.github.groot-preview+json" "https://api.github.com/repos/${{github.repository}}/actions/workflows/$workflow/runs?status=in_progress")
          count=$(jq ".total_count" <<< "$runs")
          [[ $count = '0' || $count = '1' ]] && running="false" || running="true"
          echo "$count"
          echo "$running"
          echo "::set-output name=running::$running"

      - name: Wake Up API
        if: steps.action.outputs.running == 'false'
        uses: fjogeleit/http-request-action@master
        with:
          url: "${{ env.API_URL }}/heartbeat"
          method: "GET"
          customHeaders: '{"Authorization": "${{ secrets.GH_SECRET }}"}'
          timeout: "60000"
        continue-on-error: true

      - name: Fetch Requests Count
        if: steps.action.outputs.running == 'false'
        id: requests
        uses: fjogeleit/http-request-action@master
        with:
          url: "${{ env.API_URL }}/batch/items/silver"
          method: "GET"
          customHeaders: '{"Authorization": "${{ secrets.GH_SECRET }}"}'
          timeout: "60000"

      - name: Get Requests Count
        if: steps.action.outputs.running == 'false'
        id: count
        run: |
          count=$(jq length <<< ${{ steps.requests.outputs.response }})
          echo "$count"
          echo "::set-output name=count::$count"

      - name: Setup Terraform
        if: steps.action.outputs.running == 'false' && steps.count.outputs.count != '0'
        uses: ./.github/actions/setup-terraform
        with:
          context: ./terraform
          tf-version: ${{ env.TF_VERSION }}
          tf-team-token: ${{ secrets.TFC_TEAM_TOKEN }}
          tf-workspace: ${{ env.TFC_WORKSPACE }}
          kc-dev-url: ${{ env.KEYCLOAK_DEV_URL }}
          kc-test-url: ${{ env.KEYCLOAK_TEST_URL }}
          kc-prod-url: ${{ env.KEYCLOAK_PROD_URL }}
          kc-dev-secret: ${{ secrets.KEYCLOAK_DEV_CLIENT_SECRET }}
          kc-test-secret: ${{ secrets.KEYCLOAK_TEST_CLIENT_SECRET }}
          kc-prod-secret: ${{ secrets.KEYCLOAK_PROD_CLIENT_SECRET }}

      # NPM PACKAGES
      - uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install Yarn dependencies in root
        run: yarn

      - name: Terraform Apply
        if: steps.action.outputs.running == 'false' && steps.count.outputs.count != '0'
        id: apply
        run: |
          terraform apply -auto-approve
        working-directory: ./terraform
        continue-on-error: true

      - name: Update Requests Status
        if: steps.action.outputs.running == 'false' && steps.count.outputs.count != '0'
        uses: fjogeleit/http-request-action@master
        with:
          url: "${{ env.API_URL }}/batch/items"
          method: "PUT"
          data: '{"ids": ${{ steps.requests.outputs.response }}, "success": "${{ steps.apply.outcome != ''failure'' }}"}'
          customHeaders: '{"Authorization": "${{ secrets.GH_SECRET }}"}'
          timeout: "60000"

      - name: Set Failure Code
        if: steps.apply.outcome == 'failure'
        run: exit 1
